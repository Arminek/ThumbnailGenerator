name: CI

on:
  workflow_dispatch: ~
  push: ~

env:
  REGISTRY: ghcr.io
  PHP_IMAGE_NAME: arminek/thumbnail-generator-php
  CADDY_IMAGE_NAME: arminek/thumbnail-generator-caddy

jobs:
  plan:
    runs-on: ubuntu-20.04
    name: "Validate & plan cluster changes"
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::sha-$(git rev-parse HEAD)"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - run: |
          cd terraform
          terraform init
          terraform validate
          terraform plan -var="ghcr_username=${{ secrets.GHCR_USERNAME }}" -var="ghcr_email=${{ secrets.GHCR_EMAIL }}"  -var="ghcr_password=${{ secrets.GHCR_PASSWORD }}" -var="app_server_docker_image=${{ env.REGISTRY }}/${{ env.CADDY_IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}" -var="app_php_docker_image=${{ env.REGISTRY }}/${{ env.PHP_IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}" -var="digital_ocean_access_token=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" -lock=false

  app:
    runs-on: ubuntu-20.04
    name: "Run app tests"
    steps:
      - uses: actions/checkout@v2
      - name: App tests
        run: |
          make up
          make vendor
          make test

  build-and-publish-image-php:
    runs-on: ubuntu-20.04
    name: "Build & publish php docker image"
    timeout-minutes: 10
    needs: [ "plan", "app" ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.PHP_IMAGE_NAME }}
          tags: |-
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=long
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          target: symfony_php
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-publish-image-caddy:
    runs-on: ubuntu-20.04
    name: "Build & publish caddy docker image"
    timeout-minutes: 10
    needs: [ "plan", "app" ]
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.CADDY_IMAGE_NAME }}
          tags: |-
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=long
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          target: symfony_caddy
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  terraform-apply:
    runs-on: ubuntu-latest
    name: "Deploy"
    needs: [ "build-and-publish-image-php", "build-and-publish-image-caddy" ]
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::sha-$(git rev-parse HEAD)"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - run: |
          cd terraform
          terraform init
          terraform apply -auto-approve -var="ghcr_username=${{ secrets.GHCR_USERNAME }}" -var="ghcr_email=${{ secrets.GHCR_EMAIL }}"  -var="ghcr_password=${{ secrets.GHCR_PASSWORD }}" -var="app_server_docker_image=${{ env.REGISTRY }}/${{ env.CADDY_IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}" -var="app_php_docker_image=${{ env.REGISTRY }}/${{ env.PHP_IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}" -var="digital_ocean_access_token=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" -lock-timeout=10m
